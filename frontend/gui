#!/usr/bin/perl

use strict;
use warnings;

use 5.010;

use Gtk2;
use Gtk2::SimpleList;

sub delete_event {
    Gtk2->main_quit;
    return 0;
}

Gtk2->init;

my $window = Gtk2::Window->new('toplevel');
$window->set_title("Hosts manager");
$window->set_border_width(5);
$window->signal_connect(delete_event => \&delete_event);


# List
my $hosts_list = Gtk2::SimpleList->new (
                'ID'            => 'text',
                'Hostname'      => 'text',
                'IP address'    => 'text',
                'Ping'          => 'text',
                'KM'            => 'text',
                'CORE'          => 'text',
                'UI'            => 'text',
                'Monit'         => 'text',
                'rdcmd'         => 'text',
                'rdscan'        => 'text',
                'rdhb'          => 'text',
                'rdnotify'      => 'text',
              );

# Frame
my $hosts_list_frame = Gtk2::Frame->new('Hosts');

# Add Hosts list to frame
$hosts_list_frame->add($hosts_list);

$window->add($hosts_list_frame);
$window->show_all;

my $hosts = collect_hosts_info();
display_hosts_info($hosts_list, $hosts);

Gtk2->main;

exit(0);

# Show hosts info table
sub display_hosts_info {
    my ($hosts_list, $hosts_info) = @_;

    foreach my $host_id (sort keys %$hosts_info) {

        my $host = $hosts_info->{$host_id};

        $hosts_list->{data}->[$host_id] = [
            $host_id,
            $host->{'HOST'},
            $host->{'IP'},
            $host->{'PING'} ? "Yes" : "No",
            $host->{KM_VER_MAJ} ? ($host->{'KM_VER_MAJ'} . "." . $host->{'KM_VER_MIN'}) : "",
            $host->{CORE_VER_MAJ} ? ($host->{'CORE_VER_MAJ'} . "." . $host->{'CORE_VER_MIN'}) : "",
            $host->{UI_VER_MAJ} ? ($host->{'UI_VER_MAJ'} . "." . $host->{'UI_VER_MIN'}) : "",
            undef, undef, undef, undef, undef
        ];
    };
}

# Get info about scanned hosts from files
sub collect_hosts_info {
    my %hosts;
    my $info_files = get_info_files_list();

    foreach my $fl_name (@$info_files) {
        my ($host_id, $host_info) = get_host_info($fl_name);
        $hosts{$host_id} = $host_info;
    };

    return \%hosts;
}

# Return list of the host info files
sub get_info_files_list {
    my @files_list;

    opendir(DIR, './') or die $!;

    while (my $file = readdir(DIR)) {

        # Use a regular expression to ignore files beginning with a period
        next if ($file =~ m/^\./ || $file !~ /^host_\d+\.info/);
        push @files_list, $file;
    }

    closedir(DIR);

    return \@files_list;
}

# Get info about host
sub get_host_info {
    my ($info_file_name) = @_;

    my %host_info;

    my ($host_id) = $info_file_name =~ /^host_(\d+)/;

    open(my $fh, '<', $info_file_name)
        or die "Could not open file '$info_file_name' $!";

    while (my $row = <$fh>) {
        chomp $row;
        if ($row =~ /^(.+)=(.+)$/) {
            $host_info{$1} = $2;
        }
    }

    return($host_id, \%host_info);
}
